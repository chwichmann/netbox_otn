# Generated by Django 4.1.9 on 2023-05-28 08:51

from django.db import migrations, models
import django.db.models.deletion
import taggit.managers
import utilities.json


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('extras', '0092_delete_jobresult'),
    ]

    operations = [
        migrations.CreateModel(
            name='Channel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(auto_now_add=True, null=True)),
                ('last_updated', models.DateTimeField(auto_now=True, null=True)),
                ('custom_field_data', models.JSONField(blank=True, default=dict, encoder=utilities.json.CustomFieldJSONEncoder)),
                ('name', models.CharField(max_length=50)),
                ('frequency', models.DecimalField(decimal_places=2, max_digits=5)),
                ('wavelength', models.DecimalField(decimal_places=2, max_digits=6)),
                ('tags', taggit.managers.TaggableManager(through='extras.TaggedItem', to='extras.Tag')),
            ],
            options={
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='ChannelGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(auto_now_add=True, null=True)),
                ('last_updated', models.DateTimeField(auto_now=True, null=True)),
                ('custom_field_data', models.JSONField(blank=True, default=dict, encoder=utilities.json.CustomFieldJSONEncoder)),
                ('name', models.CharField(max_length=50, unique=True)),
                ('comments', models.TextField(blank=True)),
                ('channels', models.ManyToManyField(related_name='channelgroup_channel', to='netbox_otn.channel')),
                ('tags', taggit.managers.TaggableManager(through='extras.TaggedItem', to='extras.Tag')),
            ],
            options={
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='OMS',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(auto_now_add=True, null=True)),
                ('last_updated', models.DateTimeField(auto_now=True, null=True)),
                ('custom_field_data', models.JSONField(blank=True, default=dict, encoder=utilities.json.CustomFieldJSONEncoder)),
                ('name', models.CharField(max_length=50)),
                ('status', models.CharField(default='planned', max_length=50)),
                ('comments', models.TextField(blank=True)),
                ('channelgroup', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='oms_channelgroup', to='netbox_otn.channelgroup')),
                ('tags', taggit.managers.TaggableManager(through='extras.TaggedItem', to='extras.Tag')),
            ],
            options={
                'verbose_name': 'Optical Multiplexer Section',
                'verbose_name_plural': 'Optical Multiplexer Sections',
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='OCH',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(auto_now_add=True, null=True)),
                ('last_updated', models.DateTimeField(auto_now=True, null=True)),
                ('custom_field_data', models.JSONField(blank=True, default=dict, encoder=utilities.json.CustomFieldJSONEncoder)),
                ('name', models.CharField(max_length=50)),
                ('payload', models.CharField(max_length=50)),
                ('status', models.CharField(default='planned', max_length=50)),
                ('comments', models.TextField(blank=True)),
                ('channel', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='och_channel', to='netbox_otn.channel')),
                ('oms', models.ManyToManyField(blank=True, related_name='och_oms', to='netbox_otn.oms')),
                ('tags', taggit.managers.TaggableManager(through='extras.TaggedItem', to='extras.Tag')),
            ],
            options={
                'verbose_name': 'Optical Channel',
                'verbose_name_plural': 'Optical Channels',
                'ordering': ('name',),
            },
        ),
    ]
